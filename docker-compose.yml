services:
  db:
    networks:
      - appnet
    build:
      context: ./postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "app_dev"
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./postgres/data:/var/lib/postgresql/data:z
  auth-service:
    networks:
      - appnet
    build:
      context: ./auth-service
      dockerfile: Dockerfile-dev
    ports:
      - "9090:9090"
    volumes:
      - ./auth-service:/opt/app
    environment:
      NODE_ENV: development
      DOTENV_CONFIG_PATH: "/opt/app/secrets/development.env"
      AUTH_SERVICE_SECRET: ${AUTH_SERVICE_SECRET}
      DB_CONN: ${DB_CONN_AUTH}
    command: "yarn dev"
    depends_on:
      - db
  db-helper:
    networks:
      - appnet
    build:
      context: ./todo-pro-db-helper
    volumes:
      - ./todo-pro-db-helper:/opt/app
    environment:
      NODE_ENV: development
      DB_CONN: ${DB_CONN_APP}
    command: "yarn migrate"
    depends_on:
      - db
  api-service:
    networks:
      - appnet
    build:
      context: ./todo-pro-api
      dockerfile: Dockerfile-dev
    ports:
      - "8080:8080"
    volumes:
      - ./todo-pro-api:/opt/app
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    command: "gradle bootRun --continuous"
    depends_on:
      - auth-service
  web-service:
    networks:
      - appnet
    build:
      context: ./todo-pro-web
      dockerfile: Dockerfile-dev
    ports:
      - "3000:3000"
    volumes:
      - ./todo-pro-web:/opt/app
    environment:
      NODE_ENV: development
      AUTH_SERVER_URL: ${AUTH_SERVER_URL}
      MAIN_API_URL: ${MAIN_API_URL}
      WEB_TOKEN_SECRET: ${WEB_TOKEN_SECRET}
    command: "yarn dev"
    depends_on:
      - api-service
networks:
  appnet:
    driver: "bridge"
volumes:
  data:
    driver: "local"
